.. title:: Codices Scriptoria Nova

Codices Scriptoria Nova (CSNova)
================================

1. Objectif
-----------

DÃ©veloppement d'une application de bureau multiplateforme (Linux, Windows, macOS) destinÃ©e aux auteurÂ·eÂ·s pour planifier, organiser et soutenir de maniÃ¨re crÃ©ative leurs projets de livre. Le logiciel combine une gestion de projet basÃ©e sur une base de donnÃ©es, une interface graphique moderne, des fonctionnalitÃ©s dâ€™IA intÃ©grÃ©es et un lecteur personnalisÃ© capable dâ€™afficher du contenu multimÃ©dia, des animations et des modÃ¨les 3D.

2. FonctionnalitÃ©s principales
------------------------------

* Gestion de projet : crÃ©ation, modification et archivage de projets de livre
* Base de donnÃ©es de personnages : tables principales et secondaires (physionomie, psychologie, formation, origine, etc.)
* Gestion des chapitres et des scÃ¨nes, y compris intrigues, chronologies, lieux, objets
* Module de relations et cartes mentales (personnages, groupes, connexions)
* Statistiques et vues dâ€™ensemble (fiches, listes de tÃ¢ches, suivi de progression)
* Conseils dâ€™Ã©criture intÃ©grÃ©s, guides de genres, gestion des sources, outils de brainstorming
* IntÃ©gration multimÃ©dia (images, audio, vidÃ©o, animations)
* Exportation vers divers formats (EPUB, PDF, HTML, format propriÃ©taire du lecteur)
* Lecteur multimÃ©dia personnalisÃ© avec mise en page responsive selon la plateforme
* Fonction dâ€™interview IA pour le dÃ©veloppement de personnages, idÃ©es de scÃ©nario, analyse de texte
* Langues : allemand, anglais, â€¦
* VÃ©rification orthographique : allemand, anglais

3. Base technique
-----------------

* Langage de programmation : Python (logique, intÃ©gration IA, accÃ¨s base de donnÃ©es)
* Framework GUI : PySide6 (Qt6)
* Base de donnÃ©es : SQLite (extensible plus tard vers PostgreSQL/MySQL)
* DÃ©ploiement : PyInstaller â†’ builds autonomes pour Linux, Windows, macOS
* IntÃ©gration IA : connexion API avec gestion dâ€™Ã©vÃ©nements asynchrone
* Modules dâ€™exportation : ebooklib, reportlab, weasyprint
* MultimÃ©dia : QtMultimedia, QWebEngineView/QML pour le lecteur

4. Plan de projet & avancement
------------------------------

1. **Installation** âœ…  
2. **Mise en place de la structure GUI** ðŸ”„  
3. **CrÃ©ation des tables de donnÃ©es** ðŸ”„  
4. **Test de la connexion Ã  la base de donnÃ©es** ðŸ”„  
5. **Configuration dâ€™un projet exemple** ðŸ”„  
6. **PrÃ©paration de la fonction dâ€™exportation** ðŸ”„  
7. **Initialisation du module IA** ðŸ”„  

4.1 Installation
~~~~~~~~~~~~~~~~

* Nom du projet Â« Codices Scriptoria Nova Â» vÃ©rifiÃ© juridiquement
* Logo PNG crÃ©Ã©
* Environnement de dÃ©veloppement : Linux Mint, Visual Studio Code (anglais)
* Langage : Python
* VSC installÃ©, extension Python intÃ©grÃ©e
* Extensions :
  * Black Formatter
  * Github Pull Requests
  * isort
  * Jupyter
  * Pylance
  * Python Debugger
  * Python Environments
* Connexion GitHub active
* Environnement virtuel configurÃ©, outils installÃ©s :
  * pyside6
  * ebooklib
  * weasyprint
  * reportlab
  * requests
  * asyncio
  * libxcb-cursor0

::

   frank@recaremo:~/Documents/CSNova$ tree -F ./
   â”œâ”€â”€ ai/
   â”‚   â”œâ”€â”€ analysis.py
   â”‚   â”œâ”€â”€ brainstorming.py
   â”‚   â”œâ”€â”€ interview.py
   â”‚   â”œâ”€â”€ models/
   â”‚   â””â”€â”€ prompts/
   â”œâ”€â”€ assets/
   â”‚   â”œâ”€â”€ icons/
   â”‚   â””â”€â”€ media/
   â”œâ”€â”€ cli.py
   â”œâ”€â”€ config/
   â”‚   â”œâ”€â”€ dev.py
   â”‚   â”œâ”€â”€ prod.py
   â”‚   â””â”€â”€ settings.py
   â”œâ”€â”€ core/
   â”‚   â”œâ”€â”€ database.py
   â”‚   â”œâ”€â”€ logic/
   â”‚   â”‚   â””â”€â”€ crud.py
   â”‚   â”œâ”€â”€ models/
   â”‚   â”‚   â”œâ”€â”€ character.py
   â”‚   â”‚   â”œâ”€â”€ project.py
   â”‚   â”‚   â””â”€â”€ scene.py
   â”‚   â””â”€â”€ services/
   â”œâ”€â”€ docs/
   â”œâ”€â”€ export/
   â”‚   â”œâ”€â”€ csnova_export.py
   â”‚   â”œâ”€â”€ epub_export.py
   â”‚   â”œâ”€â”€ html_export.py
   â”‚   â””â”€â”€ pdf_export.py
   â”œâ”€â”€ gui/
   â”‚   â”œâ”€â”€ main_window.py
   â”‚   â”œâ”€â”€ styles/
   â”‚   â”œâ”€â”€ tabs/
   â”‚   â”‚   â”œâ”€â”€ character_tab.py
   â”‚   â”‚   â”œâ”€â”€ project_tab.py
   â”‚   â”‚   â””â”€â”€ scene_tab.py
   â”‚   â””â”€â”€ widgets/
   â”‚       â”œâ”€â”€ dialog.py
   â”‚       â””â”€â”€ listview.py
   â”œâ”€â”€ license.md
   â”œâ”€â”€ main.py
   â”œâ”€â”€ readme.md
   â”œâ”€â”€ setup.py
   â””â”€â”€ tests/
       â””â”€â”€ conftest.py

4.2 Interface graphique
~~~~~~~~~~~~~~~~~~~~~~~

* Framework GUI : PySide6 (Qt6)
* FenÃªtre principale : main_window.py
* Onglets : character_tab.py, project_tab.py, scene_tab.py
* Widgets : dialog.py, listview.py
* Feuilles de style : styles/
* Mise en page : responsive, dÃ©pendante de la plateforme
* Objectif : utilisation intuitive, extensibilitÃ© modulaire

4.3 Tables
~~~~~~~~~~

Toutes les tables SQL sont listÃ©es dans la section Â« Tables Â» de ta page â€“ dÃ©jÃ  formatÃ©es en blocs de code Python.

5. Logo du programme
====================

5.1 Grand logo
~~~~~~~~~~~~~~

* Motif : Livre ouvert avec une main flottante et une plume Ã©crivant dedans. Livre tournÃ© Ã  45Â° dans le sens antihoraire. Le livre est deux fois plus grand que la main avec la plume. Motif encadrÃ© par un cadre simple.
* Texte : Â« Codices Scriptoria Nova Â» en trois lignes
  * Â« Codices Scriptoria Â» en police mÃ©diÃ©vale, Â« C Â» et Â« S Â» en bleu lapis-lazuli
  * Â« Nova Â» en police moderne
  * Motif Ã  gauche â€“ texte Ã  droite, en dehors du cadre
* Fond : texture parchemin avec traces dâ€™usure
* Style : Albrecht DÃ¼rer, gravure mÃ©diÃ©vale
* Composition : rÃ¨gle des tiers ou section dorÃ©e
* DÃ©tails : lÃ©gÃ¨res imperfections dans la texture dâ€™impression

**Prompt (anglais) :**

.. code-block:: text

   A hand with quill pen writing in a book. Book is larger than the hand â€“ approximately twice. Motif inside a simple frame. Right of the frame: three lines of black color text. First and second in medieval, third in modern font. First: Codices â€“ C is capital in lapis lazuli blue. Second: Scriptoria â€“ S is capital in lapis lazuli blue. Third: Nova â€“ sans-serif, modern. Style: Albrecht DÃ¼rer â€“ medieval woodcut. Background: old, used parchment with hairline fractures, fine cracks. Composition: rule of thirds or golden ratio. Include slight imperfections in the print texture.

5.2 Petit logo
~~~~~~~~~~~~~~

* MÃªme motif que le grand logo
* Texte : Â« Codices Scriptoria Nova Â» en deux lignes
  * Â« CS Â» en police mÃ©diÃ©vale, Â« C Â» et Â« S Â» en bleu lapis-lazuli
  * Â« Nova Â» en police moderne
  * Motif Ã  gauche â€“ texte Ã  droite, en dehors du cadre
* Fond : texture parchemin avec traces dâ€™usure
* Style : Albrecht DÃ¼rer, gravure mÃ©diÃ©vale
* Composition : rÃ¨gle des tiers ou section dorÃ©e
* DÃ©tails : lÃ©gÃ¨res imperfections dans la texture dâ€™impression

**Prompt (anglais) :**

.. code-block:: text

   A hand with quill pen writing in a book. Book is larger than the hand â€“ approximately twice. Motif inside a simple frame. Right of the frame: two lines of black color text. First in medieval, second in modern font. First: CS. Second: Nova â€“ sans-serif, modern. Style: Albrecht DÃ¼rer â€“ medieval woodcut. Background: old, used parchment with hairline fractures, fine cracks. Composition: rule of thirds or golden ratio. Include slight imperfections in the print texture.

6. Tutoriels & littÃ©rature, sources
-----------------------------------

6.1 PySide6 & dÃ©veloppement GUI
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* Create GUI Applications with Python & Qt6 â€“ Martin Fitzpatrick
* Modern UI with PySide6 â€“ complete app
* Install & Setup PySide6 and Qt Designer
* PySide6 + SQLite integration â€“ Qt documentation

6.2 Database & Migration
~~~~~~~~~~~~~~~~~~~~~~~~~

* SQL for Beginners â€“ Michael Kofler
* SQLite Tutorial â€“ Jacek Artymiak
* SQLite Crash Course â€“ freeCodeCamp
* Database migration with Alembic â€“ Heise Developer
* SQLAlchemy Getting Started

6.3 Multimedia & Animation
~~~~~~~~~~~~~~~~~~~~~~~~~~~

* Multimedia Programming with Qt â€“ Marco Piccolino
* QtMultimedia Tutorial â€“ Audio & Video
* QML Animation Basics â€“ Qt Academy
* QtMultimedia & QML â€“ Best Practices
* PySide6 Animation Tutorial
* QtMultimedia Docs

6.4 Export Formats & Reader
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* Creating EPUBs with ebooklib â€“ Python Publishing Guide
* PDF Export with ReportLab â€“ Python Tutorials
* HTML Export with WeasyPrint â€“ Web2PDF with CSS
* Reader development with QWebEngineView â€“ Qt Blog
* ebooklib Documentation
* ReportLab User Guide
* WeasyPrint Docs

6.5 AI Integration
~~~~~~~~~~~~~~~~~~

* Hands-On AI with Python â€“ Packt Publishing
* OpenAI API Integration â€“ Python Tutorial
